plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'maven-publish'
    id 'eclipse'
}

group = 'com.github.GhettiGuru'
version = '1.2.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    mavenLocal()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation "junit:junit:4.+"
}

tasks.register('sourceJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.github.GhettiGuru'
            artifactId = 'rencodej4'
            version = project.version

            artifact tasks.named('sourceJar')

            // Explicitly declare dependency to avoid metadata generation error
            tasks.named("generateMetadataFileForMavenJavaPublication") {
                dependsOn tasks.named("sourceJar")
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/GhettiGuru/rencodej4")
            credentials {
                username = findProperty("GH_USERNAME") ?: System.getenv("GH_USERNAME")
                password = findProperty("GH_TOKEN") ?: System.getenv("GH_TOKEN")
            }
        }
    }
}
